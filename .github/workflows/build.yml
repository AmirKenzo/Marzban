name: Build-Docker

on:
  release:
    types: [created]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: gozargah/marzban
      GHCR_IMAGE_NAME: ghcr.io/gozargah/marzban
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
          version: 10

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: ./dashboard/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ./dashboard
        run: pnpm i

      - name: Build project
        working-directory: ./dashboard
        run: VITE_BASE_API=/api/ pnpm build --if-present --outDir build --assetsDir statics

      - name: Create 404.html
        working-directory: ./dashboard
        run: cp ./build/index.html ./build/404.html

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set Docker tags
        id: tags
        run: |
          if [ "${{ github.event.release.prerelease }}" = "true" ]; then
            TAGS="${IMAGE_NAME}:${{ github.ref_name }},${GHCR_IMAGE_NAME}:${{ github.ref_name }}"
          else
            TAGS="${IMAGE_NAME}:${{ github.ref_name }},${IMAGE_NAME}:latest,${GHCR_IMAGE_NAME}:${{ github.ref_name }},${GHCR_IMAGE_NAME}:latest"
          fi
          echo "DOCKER_TAGS=$TAGS" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKER_TAGS }}
