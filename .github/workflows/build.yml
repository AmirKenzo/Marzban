name: Build-Docker

on:
  release:
    types: [created]


jobs:
  build-dashboard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
          version: 10

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: ./dashboard/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ./dashboard
        run: pnpm i

      - name: Build dashboard
        run: ./build_dashboard.sh
        
      - name: Upload dashboard build
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-build
          path: ./dashboard/build/
          retention-days: 1

  build-amd64:
    needs: build-dashboard
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Set up Python
        run: uv python install

      - name: Install Dependencies
        run: uv sync --frozen --no-dev

      - name: Rename venv
        run: mv .venv venv_amd64
      
      - name: Upload venv
        uses: actions/upload-artifact@v4
        with:
          name: venv-amd64
          path: venv_amd64
          retention-days: 1

  build-arm64:
    needs: build-dashboard
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Set up Python
        run: uv python install

      - name: Install Dependencies
        run: uv sync --frozen --no-dev

      - name: Rename venv
        run: mv .venv venv_arm64
      
      - name: Upload venv
        uses: actions/upload-artifact@v4
        with:
          name: venv-arm64
          path: venv_arm64
          retention-days: 1

  build-image:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download dashboard build
        uses: actions/download-artifact@v4
        with:
          name: dashboard-build
          path: ./dashboard/build/

      - name: Download amd64 venv
        uses: actions/download-artifact@v4
        with:
          name: venv-amd64
          path: venv/amd64

      - name: Download arm64 venv
        uses: actions/download-artifact@v4
        with:
          name: venv-arm64
          path: venv/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker tags
        id: tags
        run: |
          if [ "${{ github.event.release.prerelease }}" = "true" ]; then
            TAGS="${IMAGE_NAME}:${{ github.ref_name }},${GHCR_IMAGE_NAME}:${{ github.ref_name }}"
          else
            TAGS="${IMAGE_NAME}:${{ github.ref_name }},${IMAGE_NAME}:latest,${GHCR_IMAGE_NAME}:${{ github.ref_name }},${GHCR_IMAGE_NAME}:latest"
          fi
          echo "DOCKER_TAGS=$TAGS" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          file: ./Dockerfile.multi
          tags: ${{ env.DOCKER_TAGS }}
