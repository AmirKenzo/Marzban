name: Test Database Migrations

on:
  push:
    paths:
      - "app/db/**"
      - "app/operation/**"
      - "tests/**"
      - "app/routers/**"
  pull_request:
    paths:
      - "app/db/**"
      - "app/operation/**"
      - "tests/**"
      - "app/routers/**"

jobs:
  test-databases:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        db:
          - name: postgresql
            service:
              image: postgres:latest
              env:
                POSTGRES_PASSWORD: postgres
                POSTGRES_DB: testdb
              ports:
                - 5432:5432
              options: >-
                --health-cmd="pg_isready"
                --health-interval=10s
                --health-timeout=5s
                --health-retries=5
            url: postgresql+asyncpg://postgres:postgres@localhost:5432/testdb
          - name: mysql
            service:
              image: mysql:latest
              env:
                MYSQL_ROOT_PASSWORD: root
                MYSQL_DATABASE: testdb
              ports:
                - 3306:3306
              options: >-
                --health-cmd="mysqladmin ping -hlocalhost -uroot -proot"
                --health-interval=10s
                --health-timeout=5s
                --health-retries=5
            url: mysql+asyncmy://root:root@localhost:3306/testdb
          - name: sqlite
            url: sqlite+aiosqlite:///./test.db

    services:
      db-service:
        if: matrix.db.service
        image: ${{ matrix.db.service.image }}
        env: ${{ matrix.db.service.env }}
        ports: ${{ matrix.db.service.ports }}
        options: ${{ matrix.db.service.options }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: make setup

      - name: Run Alembic Migrations
        env:
          SQLALCHEMY_DATABASE_URL: ${{ matrix.db.url }}
          TEST_FROM: github
        run: make run-migration

      - name: Run Tests
        run: make test
