"""add status to hosts

Revision ID: 35760ebfabd2
Revises: f44ec4769d5d
Create Date: 2025-03-28 09:04:24.440491

"""
from alembic import op
import sqlalchemy as sa
from app.db.comiles_types import SQLArray


# revision identifiers, used by Alembic.
revision = '35760ebfabd2'
down_revision = 'f44ec4769d5d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    dialect = op.get_bind().dialect.name
    if dialect == 'mysql':
        # For MySQL: Add column first, then update with default value
        op.add_column('hosts', sa.Column('status', SQLArray(sa.Enum('active', 'disabled', 'limited', 'expired', 'on_hold', name='userstatus')), nullable=True))
        op.execute("UPDATE hosts SET status = '[]'")
        # Make it not nullable after setting default, specifying the existing type
        with op.batch_alter_table('hosts') as batch_op:
            batch_op.alter_column('status',
                                existing_type=SQLArray(sa.Enum('active', 'disabled', 'limited', 'expired', 'on_hold', name='userstatus')),
                                nullable=False)
    elif dialect == 'postgresql':
        op.add_column('hosts', sa.Column('status', SQLArray(sa.Enum('active', 'disabled', 'limited', 'expired', 'on_hold', name='userstatus')), server_default='{}', nullable=False))
    else:
        op.add_column('hosts', sa.Column('status', SQLArray(sa.Enum('active', 'disabled', 'limited', 'expired', 'on_hold', name='userstatus')), server_default='[]', nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('hosts', 'status')
    # ### end Alembic commands ###
